---
- name: 系统基础信息检测 (增强版)
  hosts: all
  gather_facts: yes
  tasks:
    
    # 1. 系统基本信息
    - name: 显示系统基本信息
      debug:
        msg:
          - "主机名: {{ ansible_hostname }}"
          - "操作系统: {{ ansible_distribution }} {{ ansible_distribution_version }}"
          - "内核版本: {{ ansible_kernel }}"
          - "架构: {{ ansible_architecture }}"
          - "运行时间: {{ ansible_uptime_seconds | int // 3600 }}小时"

    # 2. CPU和内存信息
    - name: 显示硬件信息
      debug:
        msg:
          - "CPU核心数: {{ ansible_processor_vcpus }}"
          - "CPU型号: {{ ansible_processor[2] | default('未知') }}"
          - "总内存: {{ (ansible_memtotal_mb / 1024) | round(2) }}GB"
          - "可用内存: {{ (ansible_memfree_mb / 1024) | round(2) }}GB"
          - "内存使用率: {{ ((ansible_memtotal_mb - ansible_memfree_mb) / ansible_memtotal_mb * 100) | round(2) }}%"

    # 3. 磁盘检查
    - name: 检查磁盘使用情况
      shell: |
        df -h | grep -E '^/dev/' || echo "无法获取磁盘信息"
      register: disk_usage
      changed_when: false
      
    - name: 显示磁盘状态
      debug:
        msg: "{{ disk_usage.stdout_lines }}"

    # 4. 网络信息
    - name: 收集网络信息
      debug:
        msg:
          - "网络接口: {{ ansible_interfaces | join(', ') }}"
          - "IP地址: {{ ansible_default_ipv4.address | default('未配置') }}"
          - "网关: {{ ansible_default_ipv4.gateway | default('未配置') }}"
          - "DNS: {{ ansible_dns.nameservers | default(['未配置']) | join(', ') }}"

    # 5. 系统负载
    - name: 检查系统负载
      shell: |
        uptime || echo "无法获取负载信息"
      register: system_load
      changed_when: false
      
    - name: 显示负载状态
      debug:
        msg: "{{ system_load.stdout }}"

    # 6. 服务状态检测
    - name: 收集服务信息
      service_facts:
      
    - name: 显示关键服务状态
      debug:
        msg: |
          服务状态:
          - SSH: {{ ansible_facts.services['sshd'].state | default('未安装') }}
          - Cron: {{ ansible_facts.services['crond'].state | default(ansible_facts.services['cron'].state | default('未安装')) }}

    # 7. 防火墙检测 (核心改进部分)
    - name: 防火墙状态检测
      block:
        - name: 检测firewalld状态
          set_fact:
            firewall_state: "{{ ansible_facts.services['firewalld'].state | default('未安装') }}"
          when: ansible_os_family == "RedHat"
          
        - name: 检测ufw状态
          shell: |
            if command -v ufw >/dev/null; then
              ufw status | grep -q inactive && echo "未激活" || echo "已激活"
            else
              echo "未安装"
            fi
          register: ufw_status
          when: ansible_os_family == "Debian"
          
        - name: 检测iptables基础规则
          shell: |
            if command -v iptables >/dev/null; then
              iptables -L -n | grep -q "Chain INPUT" && echo "已配置" || echo "未配置"
            else
              echo "未安装"
            fi
          register: iptables_status
          changed_when: false
          
        - name: 设置最终防火墙状态
          set_fact:
            final_firewall_state: |
              {% if ansible_os_family == "RedHat" %}
              firewalld: {{ firewall_state }}
              {% elif ansible_os_family == "Debian" %}
              ufw: {{ ufw_status.stdout }}
              {% endif %}
              iptables: {{ iptables_status.stdout }}
              
      rescue:
        - name: 记录防火墙检测异常
          debug:
            msg: "防火墙检测遇到异常"
          when: false  # 静默模式
          
      always:
        - name: 显示防火墙状态
          debug:
            msg: "{{ final_firewall_state | default('防火墙状态未知') }}"

    # 8. 系统更新检查
    - name: 检查系统更新 (自动适配发行版)
      block:
        - name: 检查YUM更新
          shell: |
            yum check-update 2>&1 | grep -v "^Loaded" | wc -l || echo "0"
          register: yum_updates
          when: ansible_pkg_mgr == "yum"
          
        - name: 检查APT更新
          shell: |
            apt list --upgradable 2>/dev/null | wc -l || echo "0"
          register: apt_updates
          when: ansible_pkg_mgr == "apt"
          
        - name: 设置更新数量
          set_fact:
            updates_count: "{{ yum_updates.stdout | default(apt_updates.stdout) | default('0') }}"
            
      always:
        - name: 显示可用更新
          debug:
            msg: "可用系统更新: {{ updates_count }} 个"

    # 9. 生成最终报告
    - name: 系统健康报告
      debug:
        msg: |
          ==================== 系统检测报告 ====================
          主机名: {{ ansible_hostname }}
          系统: {{ ansible_distribution }} {{ ansible_distribution_version }}
          内核: {{ ansible_kernel }}
          运行时间: {{ ansible_uptime_seconds | int // 3600 }}小时
          CPU负载: {{ system_load.stdout.split('load average:')[-1] | trim }}
          内存使用: {{ ((ansible_memtotal_mb - ansible_memfree_mb) / ansible_memtotal_mb * 100) | round(2) }}%
          防火墙状态: {{ final_firewall_state | default('未知') | indent(2) }}
          =====================================================
